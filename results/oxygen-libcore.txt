./support/src/test/java/org/apache/harmony/security/tests/support/SecurityChecker.java
31:public class SecurityChecker extends SecurityManager {




./support/src/test/java/tests/support/Support_IOTestSecurityManager.java
25:public class Support_IOTestSecurityManager extends SecurityManager {
28:    public Support_IOTestSecurityManager() {




./luni/src/test/java/libcore/java/lang/ReflectionSecurityTest.java
27:    private static class Enforcer extends SecurityManager {
111:        System.setSecurityManager(enforcer);
117:         * becuase reflection also calls into the SecurityManager, and




./luni/src/test/java/libcore/java/net/OldResponseCacheTest.java
185:    class MockSM extends SecurityManager {
201:                if ("setSecurityManager".equals(permission.getName())) {




./luni/src/test/java/libcore/java/net/OldURLClassLoaderTest.java
60:    SecurityManager sm = new SecurityManager() {




./luni/src/test/java/libcore/java/net/OldDatagramSocketTest.java
111:        SecurityManager sm = new SecurityManager() {
121:        SecurityManager oldSm = System.getSecurityManager();
122:        System.setSecurityManager(sm);
131:            System.setSecurityManager(oldSm);
148:        SecurityManager sm = new SecurityManager() {
158:        SecurityManager oldSm = System.getSecurityManager();
159:        System.setSecurityManager(sm);
168:            System.setSecurityManager(oldSm);
198:        SecurityManager sm = new SecurityManager() {
208:        SecurityManager oldSm = System.getSecurityManager();
209:        System.setSecurityManager(sm);
221:            System.setSecurityManager(oldSm);
1061:        SecurityManager sm = new SecurityManager() {
1081:            SecurityManager oldSm = System.getSecurityManager();
1082:            System.setSecurityManager(sm);
1091:                System.setSecurityManager(oldSm);
1280:        SecurityManager sm = new SecurityManager() {
1290:        SecurityManager oldSm = System.getSecurityManager();
1291:        System.setSecurityManager(sm);
1303:            System.setSecurityManager(oldSm);
1416:            SecurityManager sm = new SecurityManager() {
1428:            SecurityManager oldSm = System.getSecurityManager();
1429:            System.setSecurityManager(sm);
1439:                System.setSecurityManager(oldSm);




./luni/src/test/java/libcore/java/net/OldURLTest.java
807:    static class MockSecurityManager extends SecurityManager {
816:            if ("setSecurityManager".equals(permission.getName())) {




./luni/src/test/java/libcore/java/net/OldSocketTest.java
50:    SecurityManager sm = new SecurityManager() {
607:        SecurityManager sm = new SecurityManager() {
2532:    static class MockSecurityManager extends SecurityManager {




./luni/src/test/java/org/apache/harmony/sql/tests/java/sql/DriverManagerTest.java
610:    class TestSecurityManager extends SecurityManager {
617:                "setSecurityManager");
619:        TestSecurityManager() {
621:        } // end method TestSecurityManager()
642:    } // end class TestSecurityManager




./luni/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarFileTest.java
91:    SecurityManager sm = new SecurityManager() {




./luni/src/test/java/org/apache/harmony/archive/tests/java/util/zip/ZipFileTest.java
56:    SecurityManager sm = new SecurityManager() {




./luni/src/test/java/org/apache/harmony/nio/tests/java/nio/channels/MockSecurityManager.java
5:class MockSecurityManager extends SecurityManager {
14:    MockSecurityManager() {
19:    MockSecurityManager(String host) {
24:    MockSecurityManager(int port) {




./luni/src/test/java/org/apache/harmony/security/tests/java/security/SignerTest.java
54:    public static class MySecurityManager extends SecurityManager {




./luni/src/test/java/org/apache/harmony/security/tests/java/security/ProviderTest.java
697:    static class TestSecurityManager extends SecurityManager {
701:        public TestSecurityManager(String permissionName) {




./luni/src/test/java/org/apache/harmony/security/tests/java/security/IdentityScopeTest.java
47:    public static class MySecurityManager extends SecurityManager {




./luni/src/test/java/org/apache/harmony/security/tests/java/security/Permissions2Test.java
190:    class TestSecurityManager extends SecurityManager {




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/MutableSecurityManager.java
24:class MutableSecurityManager extends SecurityManager {
26:    static final RuntimePermission SET_SECURITY_MANAGER = new RuntimePermission("setSecurityManager");
36:    public MutableSecurityManager() {
41:    public MutableSecurityManager(Permission... permissions) {




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/SecurityManagerTest.java
35: * Test case for java.lang.SecurityManager
37:public class SecurityManagerTest extends TestCase {
38:    MutableSecurityManager mutableSM = null;
40:    MockSecurityManager mockSM = null;
43:     * @tests java.lang.SecurityManager#checkPackageAccess(String)
91:     * @tests java.lang.SecurityManager#checkPackageDefinition(String)
139:     * @tests java.lang.SecurityManager#checkAccess(java.lang.Thread)
150:        new SecurityManager().checkAccess(t);
154:     * @tests {@link java.lang.SecurityManager#checkConnect(String, int, Object)}
174:     * @tests {@link java.lang.SecurityManager#checkExec(String)}
190:     * @tests {@link java.lang.SecurityManager#checkExit(int)}
206:     * @tests {@link java.lang.SecurityManager#checkLink(String)}
222:     * @tests {@link java.lang.SecurityManager#checkListen(int)}
250:     * @tests {@link java.lang.SecurityManager#checkMulticast(java.net.InetAddress)}
269:     * @tests {@link java.lang.SecurityManager#checkMulticast(java.net.InetAddress,byte)}
290:     * @tests {@link java.lang.SecurityManager#checkPermission(Permission, Object)}
311:     * @tests {@link java.lang.SecurityManager#checkPrintJobAccess()}
327:     * @tests {@link java.lang.SecurityManager#checkRead(FileDescriptor)}
343:     * @tests {@link java.lang.SecurityManager#checkRead(String,Object)}
362:     * @tests {@link java.lang.SecurityManager#checkSetFactory()}
378:     * @tests {@link java.lang.SecurityManager#getInCheck()}
388:     * @tests {@link java.lang.SecurityManager#getSecurityContext()}
404:     * @tests {@link java.lang.SecurityManager#classDepth(String)}
412:     * @tests {@link java.lang.SecurityManager#classLoaderDepth()}
419:     * @tests {@link java.lang.SecurityManager#currentClassLoader()}
426:     * @tests {@link java.lang.SecurityManager#currentLoadedClass()}
433:     * @tests {@link java.lang.SecurityManager#inClass(String)}
438:        assertTrue(mockSM.inClass(MockSecurityManager.class.getName()));
442:     * @tests {@link java.lang.SecurityManager#inClassLoader()}
449:     * @tests {@link java.lang.SecurityManager#inClassLoader()}
452:        assertEquals("MockSecurityManager should be the first in the classes stack",
453:                mockSM.getClassContext()[0], MockSecurityManager.class);
457:    class MockSecurityManager extends SecurityManager {
502:        mutableSM = new MutableSecurityManager();
503:        mockSM = new MockSecurityManager();




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/SystemTest.java
464:     * @tests java.lang.System#getSecurityManager()
469:        method = "getSecurityManager",
472:    public void test_getSecurityManager() {
473:        // Test for method java.lang.SecurityManager
474:        // java.lang.System.getSecurityManager()
475:        assertNull("Returned incorrect SecurityManager", System
476:                .getSecurityManager());
889:    private class MockSecurityManager extends SecurityManager {




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/AllTests.java
91:        suite.addTestSuite(SecurityManagerTest.class);




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/MockSecurityManager.java
8:class MockSecurityManager extends SecurityManager {
30:        if (perm.equals(new RuntimePermission("createSecurityManager")) ||




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/ClassTest.java
1782:    SecurityManager sm = new SecurityManager() {




./luni/src/test/java/org/apache/harmony/luni/tests/java/lang/RuntimeTest.java
244:        SecurityManager sm = new SecurityManager() {
295:        SecurityManager sm = new SecurityManager() {
348:        SecurityManager sm = new SecurityManager() {
400:        SecurityManager sm = new SecurityManager() {
455:        SecurityManager sm = new SecurityManager() {




./luni/src/test/java/org/apache/harmony/luni/tests/java/io/FileTest.java
71:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_File\nTest_FileDescriptor\nTest_FileInputStream\nTest_FileNotFoundException\nTest_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/org/apache/harmony/luni/tests/java/io/BufferedReaderTest.java
36:	String testString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/org/apache/harmony/luni/tests/java/io/RandomAccessFileTest.java
44:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/org/apache/harmony/luni/tests/java/net/InetAddressTest.java
277:        class MockSecurityManager extends SecurityManager {
279:                if (permission.getName().equals("setSecurityManager")){
1052:    class MockSecurityManager extends SecurityManager {
1054:            if (permission.getName().equals("setSecurityManager")){




./luni/src/test/java/org/apache/harmony/luni/tests/java/net/Inet6AddressTest.java
32:import org.apache.harmony.luni.tests.java.net.InetAddressTest.MockSecurityManager;




./luni/src/test/java/tests/api/java/io/FilterOutputStreamTest.java
41:    private final String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/FileTest.java
55:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_File\nTest_FileDescriptor\nTest_FileInputStream\nTest_FileNotFoundException\nTest_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/BufferedInputStreamTest.java
48:    public String fileString = "Test_All_Tests\nTest_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/FileInputStreamTest.java
53:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/FileOutputStreamTest.java
60:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/BufferedWriterTest.java
38:    public String testString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/ObjectInputStreamTest.java
45:import tests.support.Support_IOTestSecurityManager;
254:        // Start testing without a SecurityManager.




./luni/src/test/java/tests/api/java/io/ObjectOutputStreamTest.java
43:import tests.support.Support_IOTestSecurityManager;
724:        // Start testing without a SecurityManager.




./luni/src/test/java/tests/api/java/io/PushbackInputStreamTest.java
35:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/BufferedReaderTest.java
41:    String testString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/BufferedOutputStreamTest.java
41:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_java_io_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/io/PrintStreamTest.java
42:    public String fileString = "Test_All_Tests\nTest_java_io_BufferedInputStream\nTest_java_io_BufferedOutputStream\nTest_java_io_ByteArrayInputStream\nTest_java_io_ByteArrayOutputStream\nTest_java_io_DataInputStream\nTest_java_io_File\nTest_java_io_FileDescriptor\nTest_java_io_FileInputStream\nTest_java_io_FileNotFoundException\nTest_java_io_FileOutputStream\nTest_java_io_FilterInputStream\nTest_java_io_FilterOutputStream\nTest_java_io_InputStream\nTest_java_io_IOException\nTest_java_io_OutputStream\nTest_PrintStream\nTest_java_io_RandomAccessFile\nTest_java_io_SyncFailedException\nTest_java_lang_AbstractMethodError\nTest_java_lang_ArithmeticException\nTest_java_lang_ArrayIndexOutOfBoundsException\nTest_java_lang_ArrayStoreException\nTest_java_lang_Boolean\nTest_java_lang_Byte\nTest_java_lang_Character\nTest_java_lang_Class\nTest_java_lang_ClassCastException\nTest_java_lang_ClassCircularityError\nTest_java_lang_ClassFormatError\nTest_java_lang_ClassLoader\nTest_java_lang_ClassNotFoundException\nTest_java_lang_CloneNotSupportedException\nTest_java_lang_Double\nTest_java_lang_Error\nTest_java_lang_Exception\nTest_java_lang_ExceptionInInitializerError\nTest_java_lang_Float\nTest_java_lang_IllegalAccessError\nTest_java_lang_IllegalAccessException\nTest_java_lang_IllegalArgumentException\nTest_java_lang_IllegalMonitorStateException\nTest_java_lang_IllegalThreadStateException\nTest_java_lang_IncompatibleClassChangeError\nTest_java_lang_IndexOutOfBoundsException\nTest_java_lang_InstantiationError\nTest_java_lang_InstantiationException\nTest_java_lang_Integer\nTest_java_lang_InternalError\nTest_java_lang_InterruptedException\nTest_java_lang_LinkageError\nTest_java_lang_Long\nTest_java_lang_Math\nTest_java_lang_NegativeArraySizeException\nTest_java_lang_NoClassDefFoundError\nTest_java_lang_NoSuchFieldError\nTest_java_lang_NoSuchMethodError\nTest_java_lang_NullPointerException\nTest_java_lang_Number\nTest_java_lang_NumberFormatException\nTest_java_lang_Object\nTest_java_lang_OutOfMemoryError\nTest_java_lang_RuntimeException\nTest_java_lang_SecurityManager\nTest_java_lang_Short\nTest_java_lang_StackOverflowError\nTest_java_lang_String\nTest_java_lang_StringBuffer\nTest_java_lang_StringIndexOutOfBoundsException\nTest_java_lang_System\nTest_java_lang_Thread\nTest_java_lang_ThreadDeath\nTest_java_lang_ThreadGroup\nTest_java_lang_Throwable\nTest_java_lang_UnknownError\nTest_java_lang_UnsatisfiedLinkError\nTest_java_lang_VerifyError\nTest_java_lang_VirtualMachineError\nTest_java_lang_vm_Image\nTest_java_lang_vm_MemorySegment\nTest_java_lang_vm_ROMStoreException\nTest_java_lang_vm_VM\nTest_java_lang_Void\nTest_java_net_BindException\nTest_java_net_ConnectException\nTest_java_net_DatagramPacket\nTest_java_net_DatagramSocket\nTest_java_net_DatagramSocketImpl\nTest_java_net_InetAddress\nTest_java_net_NoRouteToHostException\nTest_java_net_PlainDatagramSocketImpl\nTest_java_net_PlainSocketImpl\nTest_java_net_Socket\nTest_java_net_SocketException\nTest_java_net_SocketImpl\nTest_java_net_SocketInputStream\nTest_java_net_SocketOutputStream\nTest_java_net_UnknownHostException\nTest_java_util_ArrayEnumerator\nTest_java_util_Date\nTest_java_util_EventObject\nTest_java_util_HashEnumerator\nTest_java_util_Hashtable\nTest_java_util_Properties\nTest_java_util_ResourceBundle\nTest_java_util_tm\nTest_java_util_Vector\n";




./luni/src/test/java/tests/api/java/util/LocaleTest.java
532:    SecurityManager sm = new SecurityManager() {




./luni/src/test/java/tests/api/java/util/concurrent/ExecutorsTest.java
266:                        SecurityManager s = System.getSecurityManager();
310:                        SecurityManager s = System.getSecurityManager();
334:        SecurityManager sm = System.getSecurityManager();
347:        SecurityManager sm = System.getSecurityManager();
369:                if (System.getSecurityManager() == null)
403:                if (System.getSecurityManager() == null)
428://                     if (System.getSecurityManager() == null)
445://                     if (System.getSecurityManager() == null)




./luni/src/test/java/tests/api/java/util/concurrent/JSR166TestCase.java
92:    private static final boolean useSecurityManager =
93:        Boolean.getBoolean("jsr166.useSecurityManager");
100:    //     if (useSecurityManager) {
103:    //         System.setSecurityManager(new SecurityManager());
404:        SecurityManager sm = System.getSecurityManager();
410:                System.setSecurityManager(new SecurityManager());
413:                System.setSecurityManager(null);
473:             new RuntimePermission("setSecurityManager"),




./luni/src/test/java/tests/api/java/util/ResourceBundleTest.java
43:    SecurityManager sm = new SecurityManager() {




./luni/src/test/java/tests/api/java/security/AccessControlContextTest.java
44:    private class TestSecurityManager extends SecurityManager {
48:        public TestSecurityManager() {




./luni/src/test/java/tests/java/security/IdentityTest.java
52:    public static class MySecurityManager extends SecurityManager {




./luni/src/test/java/tests/security/AccessControllerTest.java
55:    SecurityManager old;
62:        old = System.getSecurityManager();
117:            SecurityManager s = System.getSecurityManager();




./luni/src/main/java/java/lang/ThreadGroup.java
24: * @see SecurityManager
249:     * caller. If there is a {@code SecurityManager} installed, calls
254:        SecurityManager currentManager = System.getSecurityManager();




./luni/src/main/java/java/lang/Runtime.java
131:     *             if the current {@code SecurityManager} disallows program
133:     * @see SecurityManager#checkExec
156:     *             if the current {@code SecurityManager} disallows program
158:     * @see SecurityManager#checkExec
183:     *             if the current {@code SecurityManager} disallows program
185:     * @see SecurityManager#checkExec
205:     *             if the current {@code SecurityManager} disallows program
207:     * @see SecurityManager#checkExec
228:     *             if the current {@code SecurityManager} disallows program
230:     * @see SecurityManager#checkExec
254:     *             if the current {@code SecurityManager} disallows program
256:     * @see SecurityManager#checkExec
288:     *             if the current {@code SecurityManager} does not allow the
290:     * @see SecurityManager#checkExit
294:        SecurityManager smgr = System.getSecurityManager();
371:     *             if the current {@code SecurityManager} does not allow to load
373:     * @see SecurityManager#checkLink
377:        SecurityManager smgr = System.getSecurityManager();
408:     *             if the current {@code SecurityManager} does not allow to load
410:     * @see SecurityManager#checkLink
414:        SecurityManager smgr = System.getSecurityManager();
495:        SecurityManager smgr = System.getSecurityManager();
608:     *             if a SecurityManager is registered and the calling code
625:        SecurityManager sm = System.getSecurityManager();
649:     *             if a SecurityManager is registered and the calling code
662:        SecurityManager sm = System.getSecurityManager();
680:     *             if the current {@code SecurityManager} does not allow the
682:     * @see SecurityManager#checkExit
689:        SecurityManager smgr = System.getSecurityManager();




./luni/src/main/java/java/lang/ProcessManager.java
190:        SecurityManager securityManager = System.getSecurityManager();




./luni/src/main/java/java/lang/reflect/AccessibleObject.java
113:        SecurityManager smgr = System.getSecurityManager();
160:        SecurityManager smgr = System.getSecurityManager();




./luni/src/main/java/java/lang/reflect/Member.java
33:     * @see java.lang.SecurityManager#checkMemberAccess
41:     * @see java.lang.SecurityManager#checkMemberAccess




./luni/src/main/java/java/lang/System.java
104:     *             if a {@link SecurityManager} is installed and its {@code
109:        SecurityManager secMgr = System.getSecurityManager();
123:     *             if a {@link SecurityManager} is installed and its {@code
128:        SecurityManager secMgr = System.getSecurityManager();
143:     *             if a {@link SecurityManager} is installed and its {@code
148:        SecurityManager secMgr = System.getSecurityManager();
210:     * @see SecurityManager#checkExit
234:     *             if a {@link SecurityManager} is installed and its {@code
242:        SecurityManager secMgr = System.getSecurityManager();
262:     *             if a {@link SecurityManager} is installed and its {@code
267:        SecurityManager secMgr = System.getSecurityManager();
319:     *             if a {@link SecurityManager} is installed and its {@code
323:        SecurityManager secMgr = System.getSecurityManager();
398:     *             if a {@link SecurityManager} is installed and its {@code
417:     *             if a {@link SecurityManager} is installed and its {@code
424:        SecurityManager secMgr = System.getSecurityManager();
449:        SecurityManager secMgr = System.getSecurityManager();
478:        SecurityManager secMgr = System.getSecurityManager();
496:     * Returns null. Android does not use {@code SecurityManager}. This method
501:    public static SecurityManager getSecurityManager() {
530:        SecurityManager smngr = System.getSecurityManager();
550:        SecurityManager smngr = System.getSecurityManager();
586:     *             if a {@link SecurityManager} is installed and its {@code
590:        SecurityManager secMgr = System.getSecurityManager();
608:    public static void setSecurityManager(SecurityManager sm) {




./luni/src/main/java/java/lang/ClassLoader.java
137:        SecurityManager smgr = System.getSecurityManager();
224:        SecurityManager smgr = System.getSecurityManager();
415:        SecurityManager smgr = System.getSecurityManager();
579:     * SecurityManager.classLoaderDepth(), currentClassLoader() and
787:     * SecurityManager.checkMemberAccess() with depth = 3. Note that
795:     *          SecurityManager.checkMemberAccess(); &lt;- current frame




./luni/src/main/java/java/lang/ProcessBuilder.java
189:     *             if {@link SecurityManager#checkExec(String)} doesn't allow




./luni/src/main/java/java/lang/Thread.java
285:     * @see java.lang.SecurityManager
310:     * @see java.lang.SecurityManager
336:     * @see java.lang.SecurityManager
370:     * @see java.lang.SecurityManager
429:     * @see java.lang.SecurityManager
432:        SecurityManager smgr = System.getSecurityManager();
442:             * SecurityManager has to allow this.
516:     * Is used for operations that require approval from a SecurityManager. If
518:     * SecurityManager installed, {@link SecurityManager#checkAccess(Thread)} is
519:     * called for that SecurityManager.
522:     *             if a SecurityManager is installed and it does not allow
526:     * @see java.lang.SecurityManager
529:        // Forwards the message to the SecurityManager (if there's one) passing
532:        SecurityManager currentManager = System.getSecurityManager();
590:     *             if the installed SecurityManager fails
591:     *             {@link SecurityManager#checkAccess(Thread)}
593:     * @see java.lang.SecurityManager
609:     *             if the current SecurityManager fails the
610:     *             {@link SecurityManager#checkPermission(java.security.Permission)}
614:        SecurityManager securityManager = System.getSecurityManager();
663:        SecurityManager sm = System.getSecurityManager();
727:     *             if the current SecurityManager fails the
728:     *             {@link SecurityManager#checkPermission(java.security.Permission)}
732:        SecurityManager securityManager = System.getSecurityManager();
796:     * for the installed {@code SecurityManager}, if any. This may result in a
820:     * @see java.lang.SecurityManager
1031:     * @throws SecurityException if the current SecurityManager fails the
1037:        SecurityManager securityManager = System.getSecurityManager();
1080:     *             if the current SecurityManager fails the checkPermission
1084:        SecurityManager securityManager = System.getSecurityManager();
1174:     *             if the current SecurityManager fails the checkAccess call.
1266:        SecurityManager securityManager = System.getSecurityManager();




./luni/src/main/java/java/lang/RuntimePermission.java
34:    static final RuntimePermission permissionToSetSecurityManager = new RuntimePermission(
35:            "setSecurityManager");
37:    static final RuntimePermission permissionToCreateSecurityManager = new RuntimePermission(
38:            "createSecurityManager");




./luni/src/main/java/java/lang/Class.java
216:            SecurityManager smgr = System.getSecurityManager();
397:        SecurityManager smgr = System.getSecurityManager();
421:     * by SecurityManager.checkMemberAccess(), classLoaderDepth(),
1005:        SecurityManager smgr = System.getSecurityManager();
1028:        SecurityManager smgr = System.getSecurityManager();
1132:        SecurityManager smgr = System.getSecurityManager();
1526:     * SecurityManager.classDepth(), and getClassContext() which use the
1527:     * parameters (-1, false) and SecurityManager.classLoaderDepth(),




./luni/src/main/java/java/lang/SecurityManager.java
46: * SecurityManager} contains a set of {@code checkXXX} methods which determine
54:public class SecurityManager {
72:     * Constructs a new {@code SecurityManager} instance.
74:     * The {@code RuntimePermission("createSecurityManager")} is checked if a
77:    public SecurityManager() {
78:        SecurityManager security = System.getSecurityManager();
81:                    .checkPermission(RuntimePermission.permissionToCreateSecurityManager);
323:        // SecurityManager.checkMemberAccess(); <- current frame




./luni/src/main/java/java/sql/DriverManager.java
402:        SecurityManager securityManager = System.getSecurityManager();




./luni/src/main/java/java/io/ObjectInputStream.java
357:     * @see SecurityManager#checkPermission(java.security.Permission)
361:        SecurityManager currentManager = System.getSecurityManager();
389:        SecurityManager sm = System.getSecurityManager();
544:            SecurityManager currentManager = System.getSecurityManager();




./luni/src/main/java/java/io/FileInputStream.java
64:     *             if a {@code SecurityManager} is installed and it denies the
69:        SecurityManager security = System.getSecurityManager();
98:     *             if a {@code SecurityManager} is installed and it denies the
106:        SecurityManager security = System.getSecurityManager();
128:     *             if a {@code SecurityManager} is installed and it denies the




./luni/src/main/java/java/io/FileOutputStream.java
61:     *             if a {@code SecurityManager} is installed and it denies the
63:     * @see java.lang.SecurityManager#checkWrite(FileDescriptor)
81:     *             if a {@code SecurityManager} is installed and it denies the
83:     * @see java.lang.SecurityManager#checkWrite(FileDescriptor)
84:     * @see java.lang.SecurityManager#checkWrite(String)
89:        SecurityManager security = System.getSecurityManager();
111:     *             if a {@code SecurityManager} is installed and it denies the
113:     * @see java.lang.SecurityManager#checkWrite(FileDescriptor)
120:        SecurityManager security = System.getSecurityManager();
140:     *             if a {@code SecurityManager} is installed and it denies the
160:     *             if a {@code SecurityManager} is installed and it denies the




./luni/src/main/java/java/io/ObjectOutputStream.java
254:     * @see SecurityManager#checkPermission(java.security.Permission)
258:        SecurityManager currentManager = System.getSecurityManager();
304:                SecurityManager sm = System.getSecurityManager();
499:            SecurityManager currentManager = System.getSecurityManager();




./luni/src/main/java/java/io/RandomAccessFile.java
96:     *             if a {@code SecurityManager} is installed and it denies
98:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
99:     * @see java.lang.SecurityManager#checkWrite(FileDescriptor)
124:        SecurityManager security = System.getSecurityManager();
166:     *             if a {@code SecurityManager} is installed and it denies
168:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
169:     * @see java.lang.SecurityManager#checkWrite(FileDescriptor)




./luni/src/main/java/java/io/File.java
282:     *             SecurityManager.checkExec(java.lang.String) disallows read
284:     * @see java.lang.SecurityManager#checkExec(String)
292:        SecurityManager security = System.getSecurityManager();
305:     *             if a {@code SecurityManager} is installed and it denies the
312:        SecurityManager security = System.getSecurityManager();
326:     *             if a {@code SecurityManager} is installed and it denies the
333:        SecurityManager security = System.getSecurityManager();
363:     *             if a {@code SecurityManager} is installed and it denies the
365:     * @see java.lang.SecurityManager#checkDelete
371:        SecurityManager security = System.getSecurityManager();
386:     *             if a {@code SecurityManager} is installed and it denies the
390:        SecurityManager security = System.getSecurityManager();
420:     *             if a {@code SecurityManager} is installed and it denies read
423:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
429:        SecurityManager security = System.getSecurityManager();
451:     * @see java.lang.SecurityManager#checkPropertyAccess
642:     * @see java.lang.SecurityManager#checkPropertyAccess
741:     *             if a {@code SecurityManager} is installed and it denies read
748:        SecurityManager security = System.getSecurityManager();
763:     *             if a {@code SecurityManager} is installed and it denies read
770:        SecurityManager security = System.getSecurityManager();
788:     *             if a {@code SecurityManager} is installed and it denies read
795:        SecurityManager security = System.getSecurityManager();
809:     *             if a {@code SecurityManager} is installed and it denies read
816:        SecurityManager security = System.getSecurityManager();
839:     *             if a {@code SecurityManager} is installed and it denies write
849:        SecurityManager security = System.getSecurityManager();
888:     *             SecurityManager.checkWrite(java.lang.String) disallows write
896:        SecurityManager security = System.getSecurityManager();
932:     *             SecurityManager.checkWrite(java.lang.String) disallows write
940:        SecurityManager security = System.getSecurityManager();
974:     *             SecurityManager.checkWrite(java.lang.String) disallows write
982:        SecurityManager security = System.getSecurityManager();
1007:     *             if a {@code SecurityManager} is installed and it denies read
1011:        SecurityManager security = System.getSecurityManager();
1030:     *             if a {@code SecurityManager} is installed and it denies read
1033:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
1036:        SecurityManager security = System.getSecurityManager();
1062:     *             if a {@code SecurityManager} is installed and it denies read
1066:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
1090:     *             if a {@code SecurityManager} is installed and it denies read
1113:     *             if a {@code SecurityManager} is installed and it denies read
1118:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
1137:     *             if a {@code SecurityManager} is installed and it denies read
1141:     * @see java.lang.SecurityManager#checkRead(FileDescriptor)
1185:     *             if a {@code SecurityManager} is installed and it denies write
1190:        SecurityManager security = System.getSecurityManager();
1210:     *             if a {@code SecurityManager} is installed and it denies write
1246:     *             if a {@code SecurityManager} is installed and it denies write
1250:        SecurityManager security = System.getSecurityManager();
1345:     *             if a {@code SecurityManager} is installed and it denies write
1352:        SecurityManager security = System.getSecurityManager();
1457:        SecurityManager security = System.getSecurityManager();
1479:        SecurityManager security = System.getSecurityManager();
1497:        SecurityManager security = System.getSecurityManager();




./luni/src/main/java/java/util/prefs/Preferences.java
445:     *             SecurityManager.
808:     *             a SecurityManager.
821:     *             a SecurityManager.
830:        SecurityManager manager = System.getSecurityManager();
855:     *             a SecurityManager.
877:     *             a SecurityManager.




./luni/src/main/java/java/util/Locale.java
573:        SecurityManager security = System.getSecurityManager();




./luni/src/main/java/java/util/logging/Logger.java
317:                        return (new PrivateSecurityManager())
321:        // the first class, which is PrivateSecurityManager, is skipped
1392:    static class PrivateSecurityManager extends SecurityManager {




./luni/src/main/java/java/util/logging/LoggingPermission.java
26: * {@code SecurityManager}.
36:     * logging. The {@code SecurityManager} checks the permissions.




./luni/src/main/java/java/util/logging/LogManager.java
236:        if (null != System.getSecurityManager()) {
237:            System.getSecurityManager().checkPermission(perm);




./luni/src/main/java/java/util/Formatter.java
680:     *             if there is a {@code SecurityManager} in place which denies permission
706:     *             if there is a {@code SecurityManager} in place which denies permission
735:     *             if there is a {@code SecurityManager} in place which denies permission
764:     *             if there is a {@code SecurityManager} in place which denies permission
790:     *             if there is a {@code SecurityManager} in place which denies permission
819:     *             if there is a {@code SecurityManager} in place which denies permission




./luni/src/main/java/java/util/concurrent/Executors.java
277:     * java.lang.SecurityManager}, it uses the group of {@link
278:     * System#getSecurityManager}, else the group of the thread
485:            SecurityManager sm = System.getSecurityManager();
537:            SecurityManager s = System.getSecurityManager();
566:            SecurityManager sm = System.getSecurityManager();




./luni/src/main/java/java/util/concurrent/ThreadPoolExecutor.java
524:     * SecurityManager.checkAccess). Shutdowns are attempted only if
531:     * unless the SecurityManager has inconsistent policies, sometimes
683:     * first check passed, if the SecurityManager treats some threads
687:        SecurityManager security = System.getSecurityManager();




./luni/src/main/java/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.java
258:                SecurityManager smgr = System.getSecurityManager();




./luni/src/main/java/java/util/concurrent/atomic/AtomicLongFieldUpdater.java
254:                SecurityManager smgr = System.getSecurityManager();
348:                SecurityManager smgr = System.getSecurityManager();




./luni/src/main/java/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.java
188:                SecurityManager smgr = System.getSecurityManager();




./luni/src/main/java/java/util/zip/ZipFile.java
120:        SecurityManager security = System.getSecurityManager();




./luni/src/main/java/java/net/InetAddress.java
289:        SecurityManager security = System.getSecurityManager();
363:        SecurityManager security = System.getSecurityManager();
397:        SecurityManager security = System.getSecurityManager();
448:        SecurityManager security = System.getSecurityManager();
542:                SecurityManager sm = System.getSecurityManager();




./luni/src/main/java/java/net/CookieHandler.java
42:        SecurityManager sm = System.getSecurityManager();
56:        SecurityManager sm = System.getSecurityManager();




./luni/src/main/java/java/net/ResponseCache.java
38:        SecurityManager sm = System.getSecurityManager();
49:        SecurityManager sm = System.getSecurityManager();




./luni/src/main/java/java/net/URLClassLoader.java
96:            SecurityManager sm = System.getSecurityManager();
675:        SecurityManager sm;
677:        if (length > 0 && (sm = System.getSecurityManager()) != null) {
794:     * SecurityManager.checkPackageAccess()} before loading a class.
815:     * loadClass()} of the new instance will call the SecurityManager's {@code
861:        SecurityManager security = System.getSecurityManager();
952:        SecurityManager sm;
953:        if (result != null && (sm = System.getSecurityManager()) != null) {







